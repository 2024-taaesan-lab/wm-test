# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  pull_request:
    branches:
      - main
      - develop
    types: [closed]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file shortest-path-app/pom.xml

    - name: Extract current version
      id: extract_version
      run: |
        current_version=$(cat version.txt | grep 'FileVersion =' | cut -d'=' -f2 | tr -d '[:space:]')
        echo "::set-output name=VERSION::$current_version"
      
    - name: Increment Patch Version
      id: version
      run: |
        major=$(echo $VERSION | cut -d'.' -f1)
        minor=$(echo $VERSION | cut -d'.' -f2)
        patch=$(echo $VERSION | cut -d'.' -f3)
        new_patch=$((patch + 1))
        new_version="$major.$minor.$new_patch"
        echo $new_version"

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USER_NAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker Image
      run: |
        docker build -t taaesan/shortest-path-app:$new_version shortest-path-app
        docker tag taaesan/shortest-path-app:$new_version taaesan/shortest-path-app:latest

    - name: Push Docker Image
      run: |
        docker push taaesan/shortest-path-app:$new_version
        docker push taaesan/shortest-path-app:latest

    - name: Update version.txt (modified)
      run: |
        sed "s/FileVersion = .*/FileVersion = $new_version/" version.txt > updated_version.txt
        git config user.name "GitHub Actions"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add updated_version.txt
        git commit -m "Bump version to $new_version"

    - name: Push changes (modified)
      uses: ad-m/github-push-action@v2.3.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: 'main'
        commit: 'Bump version to $new_version --squash'
